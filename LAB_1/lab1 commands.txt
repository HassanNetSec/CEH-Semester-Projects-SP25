# S3 Bucket Enumeration Toolkit - Command Reference with Explanations

# ---- LazyS3 Tool ----
sudo apt install ruby -y
# Installs Ruby, which is required to run LazyS3.

git clone https://github.com/nahamsec/lazys3.git
# Clones the LazyS3 GitHub repository to your local machine.

cd lazys3
# Navigate into the lazys3 project directory.

ruby lazys3.rb example.com -w common_bucket_prefixes.txt
# Runs LazyS3 with the domain 'example.com' using a wordlist of common bucket prefixes.

# ---- S3Scanner Tool ----
sudo apt install python3-venv -y
# Installs Python 3 virtual environment package if not already installed.

git clone https://github.com/sa7mon/S3Scanner.git
# Clones the S3Scanner GitHub repository to your system.

cd S3Scanner
# Navigates into the S3Scanner directory.

python3 -m venv venv
# Creates a Python virtual environment named 'venv' for isolated package installation.

source venv/bin/activate
# Activates the virtual environment so dependencies are installed locally.

pip install -r requirements.txt
# Installs Python dependencies listed in the requirements.txt for S3Scanner.

python3 s3scanner.py --bucket examplebucket --include-closed
# Scans 'examplebucket' for availability and configuration using S3Scanner.

deactivate
# Exits the Python virtual environment after scanning.

# ---- AWS CLI Script Demonstration ----
# The following creates and runs a script that uses AWS CLI and curl to enumerate S3 buckets.

cat > s3_enum_demo.sh << 'EOF'
#!/bin/bash

# Colors for output
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}[*] S3 Bucket Enumeration Demonstration${NC}"

# List of company names to check
COMPANY="acme-corp"
echo -e "${BLUE}[*] Testing common bucket names for: $COMPANY${NC}"

# Array of common bucket name patterns
PATTERNS=(
  ""
  "-backup"
  "-backups"
  "-data"
  "-dev"
  "-development"
  "-prod"
  "-production"
  "-stage"
  "-staging"
  "-test"
  "-testing"
  "-public"
  "-private"
  "-files"
  "-assets"
  "-media"
  "-images"
  "-docs"
  "-documents"
)

# Try each pattern
for PATTERN in "${PATTERNS[@]}"; do
  BUCKET="${COMPANY}${PATTERN}"
  echo -e "${BLUE}[*] Checking: $BUCKET${NC}"
  
  if aws s3 ls s3://$BUCKET 2>/dev/null; then
    echo -e "${GREEN}[+] Found accessible bucket: $BUCKET${NC}"
  else
    HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://$BUCKET.s3.amazonaws.com)
    if [ "$HTTP_CODE" == "403" ]; then
      echo -e "${RED}[-] Bucket exists but access denied: $BUCKET${NC}"
    elif [ "$HTTP_CODE" == "404" ]; then
      echo -e "${RED}[-] Bucket does not exist: $BUCKET${NC}"
    else
      echo -e "${RED}[-] Unknown status ($HTTP_CODE) for bucket: $BUCKET${NC}"
    fi
  fi
done

echo -e "${BLUE}[*] S3 Bucket Enumeration complete${NC}"
EOF

chmod +x s3_enum_demo.sh
# Grants executable permissions to the script.

./s3_enum_demo.sh
# Executes the AWS CLI-based S3 bucket enumeration script.
